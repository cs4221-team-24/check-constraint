DROP TABLE IF EXISTS CUSTOMER;

CREATE TABLE CUSTOMER
(ID INT PRIMARY KEY, NAME VARCHAR(50), AGE INT , EMAIL VARCHAR(50) , CITY VARCHAR(50) , COUNTRY VARCHAR(50) , CREDIT_LIMIT DECIMAL(10,2),);

CREATE OR REPLACE FUNCTION CUSTOMER_0_check_function()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  $$
  BEGIN
	  IF (NEW.AGE >= 18 AND NEW.AGE <= 100 ) THEN
		   return NEW;
	  END IF;
	  RETURN NULL;
  END;
  $$;

CREATE TRIGGER CUSTOMER_0_check_trigger
BEFORE INSERT ON CUSTOMER
  FOR EACH ROW EXECUTE FUNCTION CUSTOMER_0_check_function();


CREATE OR REPLACE FUNCTION CUSTOMER_1_check_function()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  $$
  BEGIN
	  IF (NEW.EMAIL LIKE '%@%.%' ) THEN
		   return NEW;
	  END IF;
	  RETURN NULL;
  END;
  $$;

CREATE TRIGGER CUSTOMER_1_check_trigger
BEFORE INSERT ON CUSTOMER
  FOR EACH ROW EXECUTE FUNCTION CUSTOMER_1_check_function();


CREATE OR REPLACE FUNCTION CUSTOMER_2_check_function()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  $$
  BEGIN
	  IF (NEW.CREDIT_LIMIT >= 0 ) THEN
		   return NEW;
	  END IF;
	  RETURN NULL;
  END;
  $$;

CREATE TRIGGER CUSTOMER_2_check_trigger
BEFORE INSERT ON CUSTOMER
  FOR EACH ROW EXECUTE FUNCTION CUSTOMER_2_check_function();


CREATE OR REPLACE FUNCTION CUSTOMER_3_check_function()
  RETURNS TRIGGER
  LANGUAGE PLPGSQL
  AS
  $$
  BEGIN
	  IF (( NEW.CITY = 'New York' AND NEW.COUNTRY = 'United States' ) OR ( NEW.CITY = 'London' AND NEW.COUNTRY = 'United Kingdom' ) OR ( NEW.CITY = 'Paris' AND NEW.COUNTRY = 'France' ) OR ( NEW.CITY = 'Port Moresby' AND NEW.COUNTRY = 'Papua New Guinea' ) ) THEN
		   return NEW;
	  END IF;
	  RETURN NULL;
  END;
  $$;

CREATE TRIGGER CUSTOMER_3_check_trigger
BEFORE INSERT ON CUSTOMER
  FOR EACH ROW EXECUTE FUNCTION CUSTOMER_3_check_function();
